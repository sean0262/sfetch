#!/bin/bash
kernel=$(uname -r)
shell=$(echo `$SHELL --version` | cut -d'(' -f1)
vn=$(echo "0.1.0a")

declare -A osInf;
osInf[/etc/redhat-release]=yum
osInf[/etc/arch-release]=pacman
osInf[/etc/gentoo-release]=emerge
osInf[/etc/SuSE-release]=zypp
osInf[/etc/debian_release]=apt-get
osInf[/etc/ubuntu-release]=apt-get
osInf[/etc/debian_version]=apt-get
# Change to 'slackpkg' to '/usr/sbin/slackpkg' if not working!
osInf[/etc/slackware-version]=slackpkg


# Arguments . . .
if [[ -n "$1" ]]; then
	if [ "$1" == "--package-manager" ] || [ "$1" == "-pm" ]; then
		for f in ${!osInf[@]}
		do
			if [[ -f $f ]];then
				echo "$(${osInf[$f]})"
			fi
		done
	elif [ "$1" == "--help" ] || [ "$1" == "-h" ]; then
		echo "Available Arguments:"
		echo "Package Manager [--PM]	Displays Package Manager"
		echo "Help [-h][--help]	Displays Available Arguments"
		echo "Version [--version]	Displays Current sfetch Version"
	elif [ "$1" == "--version" ] || [ "$1" == "-v" ]; then
		echo "version $vn"
	else
		echo "Try using -h or --help for a list of Available Arguments."
	fi
fi

# Information-check . . .
if [[ $# -eq 0 ]] ; then
	if [[ "$OSTYPE" =~ "FreeBSD" ]]; then
		host=$(sysctl -n hw.model)
		distro=$(uname -mrs)
		max_memory=$(($(sysctl -n hw.physmem) / 1024 / 1024))
		memory="${max_memory}M"
		s=$(sysctl -n kern.boottime)
		s=${s#*=}
		s=${s%,*}
		s=$(($(date +%s) - s))
		d=$((s / 60 / 60 / 24))
		h=$((s / 60 / 60 % 24))
		m=$((s / 60 % 60))
		[ "$d" = 0 ] || uptime="${uptime}${d}d "
		[ "$h" = 0 ] || uptime="${uptime}${h}h "
		[ "$m" = 0 ] || uptime="${uptime}${m}m "
		
		log uptime "${time: -0min}" >&6
	elif [[ "$OSTYPE" =~ "linux" ]]; then
		if [[ -d "/system/app/" && -d "/system/priv-app" ]]; then
                	host="$(getprop ro.product.brand) $(getprop ro.product.model)"
            	elif [[ -f "/sys/devices/virtual/dmi/id/product_name" || -f "/sys/devices/virtual/dmi/id/product_version" ]]; then
                	host="$(< /sys/devices/virtual/dmi/id/product_name)"
                	host+=" $(< /sys/devices/virtual/dmi/id/product_version)"
		elif [[ -f "/sys/firmware/devicetree/base/model" ]]; then
                	host="$(< /sys/firmware/devicetree/base/model)"
            	elif [[ -f "/tmp/sysinfo/model" ]]; then
                	host="$(< /tmp/sysinfo/model)"
            	fi
		distro=$(cat /etc/os-release | head -1 | sed 's/"//g' | cut -d= -f2)
		memory=$(free -hm | awk 'NR==2{printf "%s/%s\n", $3, $2}')
		uptime=$(uptime -p)
	fi	

	if [[ $distro =~ "Debian" ]] || [[ $distro =~ "Ubuntu" ]]
	then
  		packages=$(dpkg-query -W | wc -l)
	fi

	if [[ $distro =~ "Raspbian" ]]
	then
		packages=$(dpkg-query -W | wc -l)
	fi

	if [[ $distro =~ "Slackware" ]] 
	then
  		packages=$(ls /var/log/packages | wc -l)
	fi

	if [ -n "$XDG_CURRENT_DESKTOP" ]; then
		de=$(echo "$XDG_CURRENT_DESKTOP")
	else
  		de=$(echo "None")
	fi

	if [ -n "$GDMSESSION" ]; then
  		session=$(echo "$GDMSESSION")
	else
  		session=$(echo "None")
	fi

	# Colors for Echo... [rc = red color, nc = no color, etc...]
	rc='\033[0;31m'
	gc='\033[0;32m'
	nc='\033[0m'

	# Display the information...
	echo -e "${rc}OS${nc}: $distro"
	echo -e "${rc}DE${nc}: $de"
	echo -e "${rc}Host${nc}: $host"
	echo -e "${rc}Kernel${nc}: $kernel"
	echo -e "${rc}Shell${nc}: $shell"
	echo -e "${rc}Uptime${nc}: $uptime"
	# echo -e "${rc}Packages${nc}: $packages"
	# echo -e "${rc}Session${nc}: $session"
	echo -e "${rc}Memory${nc}: $memory"
fi
